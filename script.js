document.addEventListener('DOMContentLoaded', () => {
    const tg = window.Telegram.WebApp;
    tg.ready();
    tg.expand();

    // --- –≠–ª–µ–º–µ–Ω—Ç—ã UI ---
    const progressTextEl = document.getElementById('progressText');
    const progressBarEl = document.getElementById('progressBar');
    const goalStatusEl = document.getElementById('goalStatus');
    const reservePointsEl = document.getElementById('reservePoints');
    const productListEl = document.getElementById('productList');

    // --- –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ ---
    const products = [
        { id: 1, name: '–ë–∞—Ç–∞—Ä–µ—è Dyson', points: 5 },
        { id: 2, name: 'Main Body Dyson', points: 10 },
        { id: 3, name: '–ù–∞—É—à–Ω–∏–∫–∏ Shokz', points: 10 },
        { id: 4, name: '–ê–ø–ø–∞—Ä–∞—Ç Cefaly', points: 45 },
        { id: 5, name: '–§–∏–ª—å—Ç—Ä Dyson', points: 3 },
        { id: 6, name: '–°—Ç–∞–π–ª–µ—Ä Dyson', points: 20 },
    ];

    // --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
    let state = {
        dailyGoal: 100,
        currentPoints: 0,
        reservePoints: 0,
    };
    
    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö Telegram
    const userId = tg.initDataUnsafe?.user?.id ? String(tg.initDataUnsafe.user.id) : 'test-user-id';
    // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ "–¥–æ–∫—É–º–µ–Ω—Ç" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const userDocRef = db.collection('users').doc(userId);

    // --- –§—É–Ω–∫—Ü–∏–∏ ---

    // –ó–ê–ì–†–£–ó–ö–ê –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase
    async function loadState() {
        try {
            const doc = await userDocRef.get();
            if (doc.exists) {
                const data = doc.data();
                const today = new Date().toDateString();
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑
                const lastUpdate = data.lastUpdate ? new Date(data.lastUpdate).toDateString() : null;

                // –ï—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å
                if (today !== lastUpdate) {
                    state.currentPoints = 0;
                    state.reservePoints = data.reservePoints || 0;
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–±—Ä–æ—à–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –±–∞–∑—É
                    await saveData({ currentPoints: 0, lastUpdate: new Date().toISOString() });
                } else {
                    // –ï—Å–ª–∏ –¥–µ–Ω—å —Ç–æ—Ç –∂–µ, –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                    state.currentPoints = data.currentPoints || 0;
                    state.reservePoints = data.reservePoints || 0;
                }
            } else {
                // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤–ø–µ—Ä–≤—ã–µ, —Å–æ–∑–¥–∞–µ–º –¥–ª—è –Ω–µ–≥–æ –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ
                await saveData({
                    currentPoints: 0,
                    reservePoints: 0,
                    lastUpdate: new Date().toISOString(),
                    telegramUsername: tg.initDataUnsafe?.user?.username || 'unknown'
                });
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Firebase:", error);
            alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.");
        }
        updateUI(); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    }

    // –°–û–•–†–ê–ù–ï–ù–ò–ï –¥–∞–Ω–Ω—ã—Ö –≤ Firebase
    async function saveData(dataToSave) {
        try {
            // –ú–µ—Ç–æ–¥ set —Å { merge: true } –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–æ–ª—è, –Ω–µ —Å—Ç–∏—Ä–∞—è –æ—Å—Ç–∞–ª—å–Ω—ã–µ
            await userDocRef.set(dataToSave, { merge: true });
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Firebase:", error);
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    function updateUI() {
        progressTextEl.textContent = `${state.currentPoints} / ${state.dailyGoal}`;
        reservePointsEl.textContent = state.reservePoints;
        const progressPercent = Math.min(100, (state.currentPoints / state.dailyGoal) * 100);
        progressBarEl.style.width = `${progressPercent}%`;

        if (state.currentPoints >= state.dailyGoal) {
            goalStatusEl.textContent = 'üî• –ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω!';
            goalStatusEl.style.color = 'green';
        } else {
            goalStatusEl.textContent = '';
        }
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
    function renderProductList() {
        productListEl.innerHTML = '';
        products.forEach(product => {
            const item = document.createElement('div');
            item.className = 'product-item';
            item.innerHTML = `
                <div>
                    <div class="product-info">${product.name}</div>
                    <div class="product-points">+${product.points} –æ—á–∫–æ–≤</div>
                </div>
                <div class="add-button">+</div>
            `;
            item.addEventListener('click', () => addProduct(product));
            productListEl.appendChild(item);
        });
    }

    // –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞ (—Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è)
    async function addProduct(product) {
        const previousPoints = state.currentPoints;
        state.currentPoints += product.points;

        let newReservePoints = state.reservePoints;
        if (previousPoints < state.dailyGoal && state.currentPoints >= state.dailyGoal) {
            const overflow = state.currentPoints - state.dailyGoal;
            newReservePoints += overflow;
            tg.HapticFeedback.notificationOccurred('success');
        } else if (state.currentPoints > state.dailyGoal) {
            newReservePoints += product.points;
        }
        state.reservePoints = newReservePoints;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI —Å—Ä–∞–∑—É –¥–ª—è –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç–∏
        updateUI();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Firebase –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        await saveData({ 
            currentPoints: state.currentPoints, 
            reservePoints: state.reservePoints,
            lastUpdate: new Date().toISOString()
        });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        tg.sendData(JSON.stringify({ name: product.name, points: product.points }));
    }

    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
    renderProductList();
    loadState(); // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–±–ª–∞–∫–∞
});
