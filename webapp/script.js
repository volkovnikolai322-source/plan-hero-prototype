document.addEventListener('DOMContentLoaded', () => {
    const tg = window.Telegram.WebApp;
    tg.ready();
    tg.expand(); // –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

    // --- –≠–ª–µ–º–µ–Ω—Ç—ã UI ---
    const progressTextEl = document.getElementById('progressText');
    const progressBarEl = document.getElementById('progressBar');
    const goalStatusEl = document.getElementById('goalStatus');
    const reservePointsEl = document.getElementById('reservePoints');
    const productListEl = document.getElementById('productList');

    // --- –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ ---
    const products = [
        { id: 1, name: '–ë–∞—Ç–∞—Ä–µ—è Dyson', points: 5 },
        { id: 2, name: 'Main Body Dyson', points: 10 },
        { id: 3, name: '–ù–∞—É—à–Ω–∏–∫–∏ Shokz', points: 10 },
        { id: 4, name: '–ê–ø–ø–∞—Ä–∞—Ç Cefaly', points: 45 },
        { id: 5, name: '–§–∏–ª—å—Ç—Ä Dyson', points: 3 },
        { id: 6, name: '–°—Ç–∞–π–ª–µ—Ä Dyson', points: 20 },
    ];

    // --- –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
    let state = {
        dailyGoal: 100,
        currentPoints: 0,
        reservePoints: 0,
        lastUpdate: new Date().toDateString() // –î–ª—è —Å–±—Ä–æ—Å–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
    };

    // --- –§—É–Ω–∫—Ü–∏–∏ ---

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ localStorage
    function loadState() {
        const savedState = JSON.parse(localStorage.getItem('planHeroState'));
        if (savedState) {
            // –ï—Å–ª–∏ –Ω–∞—Å—Ç—É–ø–∏–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å
            if (new Date().toDateString() !== savedState.lastUpdate) {
                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤—á–µ—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                const neededPoints = Math.max(0, state.dailyGoal - savedState.currentPoints);
                if (savedState.reservePoints >= neededPoints) {
                    savedState.reservePoints -= neededPoints;
                }
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–Ω–µ–≤–Ω—ã–µ –æ—á–∫–∏
                savedState.currentPoints = 0;
                savedState.lastUpdate = new Date().toDateString();
            }
            state = savedState;
        }
        saveState(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –±—ã–ª —Å–±—Ä–æ—Å)
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ localStorage
    function saveState() {
        localStorage.setItem('planHeroState', JSON.stringify(state));
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ UI
    function updateUI() {
        progressTextEl.textContent = `${state.currentPoints} / ${state.dailyGoal}`;
        reservePointsEl.textContent = state.reservePoints;

        const progressPercent = Math.min(100, (state.currentPoints / state.dailyGoal) * 100);
        progressBarEl.style.width = `${progressPercent}%`;

        if (state.currentPoints >= state.dailyGoal) {
            goalStatusEl.textContent = 'üî• –ü–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω!';
            goalStatusEl.style.color = 'green';
        } else {
            goalStatusEl.textContent = '';
        }
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
    function renderProductList() {
        productListEl.innerHTML = '';
        products.forEach(product => {
            const item = document.createElement('div');
            item.className = 'product-item';
            item.innerHTML = `
                <div>
                    <div class="product-info">${product.name}</div>
                    <div class="product-points">+${product.points} –æ—á–∫–æ–≤</div>
                </div>
                <div class="add-button">+</div>
            `;
            item.addEventListener('click', () => addProduct(product));
            productListEl.appendChild(item);
        });
    }

    // –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
    function addProduct(product) {
        const previousPoints = state.currentPoints;
        state.currentPoints += product.points;

        // –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–∞
        if (previousPoints < state.dailyGoal && state.currentPoints >= state.dailyGoal) {
            const overflow = state.currentPoints - state.dailyGoal;
            state.reservePoints += overflow;
            tg.HapticFeedback.notificationOccurred('success'); // –í–∏–±—Ä–æ–æ—Ç–∫–ª–∏–∫
        } else if (state.currentPoints > state.dailyGoal) {
            state.reservePoints += product.points;
        }

        saveState();
        updateUI();

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        tg.sendData(JSON.stringify({ name: product.name, points: product.points }));
    }


    // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
    loadState();
    renderProductList();
    updateUI();
});