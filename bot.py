import logging
import json
from config import BOT_TOKEN  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∏–∑ config.py

# –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã: –¥–æ–±–∞–≤–ª—è–µ–º JobQueue
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    JobQueue,
)
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from pytz import timezone  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –¥–ª—è —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤

# –í–ê–ñ–ù–û: –£–∫–∞–∂–∏—Ç–µ URL, –≥–¥–µ —Ä–∞–∑–º–µ—â–µ–Ω–æ –≤–∞—à–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å GitHub Pages)
WEB_APP_URL = "https://your-username.github.io/plan-hero-prototype/webapp/"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Web App."""
    button = KeyboardButton(
        text="üìä –û—Ç–∫—Ä—ã—Ç—å –º–æ–π –ø–ª–∞–Ω", web_app=WebAppInfo(url=WEB_APP_URL)
    )
    keyboard = ReplyKeyboardMarkup.from_button(button, resize_keyboard=True)
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ '–ü–ª–∞–Ω-–ì–µ—Ä–æ–π'!\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤–∞—à –¥–Ω–µ–≤–Ω–æ–π –ø–ª–∞–Ω –∏ –Ω–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–∫–∞–∑—ã.",
        reply_markup=keyboard,
    )


async def web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ—Ç Web App, –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ."""
    data = json.loads(update.message.web_app_data.data)
    await update.message.reply_text(
        f"‚úÖ –ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç!\n\n"
        f"–¢–æ–≤–∞—Ä: {data['name']}\n"
        f"–û—á–∫–∏: +{data['points']}\n\n"
        f"–í–∞—à —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏."
    )


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""

    # --- –ù–ê–ß–ê–õ–û –ò–ó–ú–ï–ù–ï–ù–ò–ô ---

    # –°–æ–∑–¥–∞–µ–º –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á —Å —è–≤–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏
    job_queue = JobQueue()
    job_queue.scheduler.timezone = timezone("Europe/Moscow")

    # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Å–æ–∑–¥–∞–Ω–Ω—É—é –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á
    application = Application.builder().token(BOT_TOKEN).job_queue(job_queue).build()

    # --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ò–ô ---

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(
        MessageHandler(filters.StatusUpdate.WEB_APP_DATA, web_app_data)
    )

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()


if __name__ == "__main__":
    main()
